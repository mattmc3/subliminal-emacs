#+TITLE: Subliminal Emacs Config
#+STARTUP: content
#+PROPERTY: header-args:emacs-lisp :tangle yes :results output silent

* Notes
This is an org mode literate config. Use <TAB> to expand sections, and put Emacs lisp in source blocks.

* Subliminal TODOs
- [ ] Add mini-map
- [ ] Add multiple cursor plugin
- [ ] Find/Replace shortcuts
- [ ] Frame geometry
- [ ] Save sessions

* Setup

** UTF-8
#+begin_src emacs-lisp
  ;; default to utf-8 for all the things
  (set-charset-priority 'unicode)
  (setq locale-coding-system 'utf-8)
  (set-terminal-coding-system 'utf-8)
  (set-keyboard-coding-system 'utf-8)
  (set-selection-coding-system 'utf-8)
		(prefer-coding-system 'utf-8)
  (setq default-process-coding-system '(utf-8-unix . utf-8-unix))
#+end_src

** Better Emacs defaults
#+begin_src emacs-lisp
  (setq lexical-binding t)
  (setq max-lisp-eval-depth 2000)
  (setq gc-cons-threshold 100000000)
  ;; always allow 'y' instead of 'yes'.
  (defalias 'yes-or-no-p 'y-or-n-p)
#+end_src

** Restore sessions
#+begin_src emacs-lisp
  (desktop-save-mode 1)
#+end_src

** Package management
We want to use packages, so let's get that configured

#+begin_src emacs-lisp
    (require 'package)

    (setq package-enable-at-startup nil)

    (add-to-list 'package-archives
		 '("melpa" . "https://melpa.org/packages/") t)
    (package-initialize)

    (unless (package-installed-p 'use-package)
      (package-refresh-contents)
      (package-install 'use-package))

    ;;(use-package diminish :ensure t)

    ;;(use-package exec-path-from-shell
    ;;  :ensure t
    ;;  :config
    ;;  (setenv "SHELL" "/usr/local/bin/zsh")
    ;;  (setq exec-path-from-shell-variables '("PATH"))
    ;;  (exec-path-from-shell-initialize))
#+end_src

** Settings to sort later
#+begin_src emacs-lisp
  ;; write over selected text on input... like modern editors should
  (delete-selection-mode t)

  ;; Don't persist a custom file
  (setq custom-file null-device)         ; use a temp file as a placeholder
  (setq custom-safe-themes t)            ; mark all themes as safe, since we can't persist now
  (setq enable-local-variables :all)     ; fix =defvar= warnings

  ;; stop emacs from littering the file system with backup files
  (setq make-backup-files nil
        auto-save-default nil
        create-lockfiles nil)
#+end_src

** Emacs editor style
#+begin_src emacs-lisp
  ;; I like my cursor to be a bar, not a blinking box
  (setq-default cursor-type 'bar)

  ;; let's not see the toolbar
  (tool-bar-mode -1)

  ;; turn off the splash screen
  (setq inhibit-splash-screen t)

  ;; set scrolling to be nicer
  (setq scroll-margin 30)
  (setq scroll-step 1)
  (setq scroll-conservatively 10000)
  (setq auto-window-vscroll nil)
#+end_src

** Keybindings
#+begin_src emacs-lisp
  (org-babel-load-file (expand-file-name "subliminal-keys.org" user-emacs-directory))
#+end_src

* Subliminal

* Packages

** Monokai theme
#+begin_src emacs-lisp
(use-package monokai-pro-theme
  :ensure t
  :config
  (load-theme 'monokai-pro t))
#+end_src

** All the icons
#+begin_src emacs-lisp
  (use-package all-the-icons
    :ensure t)
#+end_src

** Minimap
#+begin_src emacs-lisp
  (use-package minimap
    :ensure t)
  ;; (minimap-mode)
#+end_src

** Centaur Tabs
[[https://github.com/ema2159/centaur-tabs][Centaur Tabs]]
#+begin_src emacs-lisp
  (use-package centaur-tabs
    :ensure t
    :demand
    :config
  (setq centaur-tabs-style "bar"
    centaur-tabs-height 24
    centaur-tabs-set-icons t
    centaur-tabs-set-modified-marker t
    ; centaur-tabs-show-navigation-buttons t
    centaur-tabs-gray-out-icons 'buffer
    centaur-tabs-set-bar 'over
          centaur-tabs-modified-marker "*"
    x-underline-at-descent-line t)
    (centaur-tabs-headline-match)
    (centaur-tabs-mode t)
    :bind
    ("C-<prior>" . centaur-tabs-backward)
    ("C-<next>" . centaur-tabs-forward))

  ;;(setq centaur-tabs-gray-out-icons 'buffer)
  ;;(setq centaur-tabs-style "slant")
#+end_src
